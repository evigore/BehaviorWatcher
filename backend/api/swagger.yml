swagger: "2.0"
info:
  description: "Description"
  version: "1.0.0"
  title: "BehaviorWatcher"
  termsOfService: "http://swagger.io/terms/"
schemes:
  - "https"
  - "http"
basePath: "/api"

paths:
  /metrics:
    get:
      operationId: metrics.read_all
      summary: List all metrics
      description: List all metrics
      tags:
        - Metric
      produces:
        - application/json
      parameters:
        - name: user_id
          in: query
          type: integer
        - name: task_id
          in: query
          type: integer
      responses:
        '200':
          description: Successfully read metrics
          schema:
            type: array
            items:
              $ref: "#/definitions/MetricModel"
        '400':
          description: Bad request. If some data are strange
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: Unexpected error.
          schema:
            $ref: "#/definitions/Error"

    post:
      operationId: metrics.create
      summary: Create new metric in system.
      description: Create new metric in system.
      tags:
        - Metric
      produces:
        - application/json
      parameters:
        - name: metric
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/CreateMetricModel'
      responses:
        '201':
          description: Successfully read metric
          schema:
            $ref: '#/definitions/MetricModel'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/MetricModel'
        '409':
          description: Specified metric already exists
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /metrics/{metricId}:
    get:
      operationId: metrics.read_one
      description: Get concrete metric by id
      tags:
        - Metric
      produces:
        - application/json
      parameters:
      - name: metricId
        in: path
        required: true
        type: integer
      responses:
        '200':
          description: Successfully read metric
          schema:
            $ref: '#/definitions/MetricModel'
        '400':
          description: Bad request. If some data are strange
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    patch:
      operationId: metrics.patch
      description: Edit data for concrete metric
      tags:
        - Metric
      produces:
      - application/json
      parameters:
      - name: metricId
        in: path
        required: true
        type: integer
      - name: metricData
        in: body
        required: true
        description: 'Data to update the metric with'
        schema:
          $ref: '#/definitions/EditMetricModel'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MetricModel'
        '400':
          description: Bad request. If some data are strange
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      operationId: metrics.delete
      description: Delete concrete metric using metricId
      tags:
        - Metric
      produces:
      - application/json
      parameters:
      - name: metricId
        in: path
        required: true
        type: integer
      responses:
        '200':
          description: OK.
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 'OK'
        '400':
          description: Bad request. If some data are strange
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
 
  
  /metrics/{metricId}/receivers:
    get:
      operationId: metrics.read_receivers
      description: List of receivers of the current metric.
      tags:
        - Receiver
      produces:
      - application/json
      parameters:
      - name: metricId
        in: path
        required: true
        type: integer
        description: ''
      responses:
        '200':
          description: OK.
          schema:
            type: array
            items:
              $ref: '#/definitions/ReceiverModel'
        '400':
          description: Bad request. If some data are strange
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      operationId: metrics.create_receiver
      description: Add receiver to current metric
      tags:
      - Receiver
      produces:
      - application/json
      parameters:
      - name: metricId
        in: path
        required: true
        type: integer
      - name: receiver
        in: body
        required: true
        schema:
          type: array
          items:
            type: integer
          example: [2, 7]
      responses:
        '200':
          description: OK.
          schema:
            type: array
            items:
              $ref: '#/definitions/MetricExtendedModel'  #TODO
        '400':
          description: Bad request. If some data are strange
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'



definitions:
  MetricModel:
    type: "object"
    properties:
      id:
        type: "integer"
      user_id:
        type: "integer"
      task_id:
        type: "integer"
      task_copied:
        type: "boolean"
      task_viewed:
        type: "boolean"
      reading_time:
        type: "integer"


  CreateMetricModel:
    type: "object"
    properties:
      user_id:
        type: "integer"
      task_id:
        type: "integer"
      task_copied:
        type: "boolean"
        default: false
      task_viewed:
        type: "boolean"
        default: false
      reading_time:
        type: "integer"
    required:
      - user_id
      - task_id

  EditMetricModel:
    type: "object"
    properties:
      user_id:
        type: "integer"
      task_id:
        type: "integer"
      task_copied:
        type: "boolean"
      task_viewed:
        type: "boolean"
      reading_time:
        type: "integer"        

  ReceiverModel:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 32
      metricId:
        type: "integer"
        example: 2
      userId:
        type: "integer"
        example: 7
    required:
      - id
      - userId
      - metricId

  MetricExtendedModel:
    type: "object"
    properties:
      id:
        type: "integer"
      userId:
        type: "integer"
      taskId:
        type: "integer"
      taskCopied:
        type: "boolean"
      taskViewed:
        type: "boolean"
      readingTime:
        type: "integer"
      receivers:
        type: array
        items:
          $ref: '#/definitions/ReceiverModel'
      senders:
        type: array
        items:
          $ref: '#/definitions/SenderModel'

  SenderModel:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 2
      metricId:
        type: "integer"
        example: 13
      userId:
        type: "integer"
        example: 9
    required:
      - id
      - userId
      - metricId

  Error:
    title: Error message
    type: object
    properties:
      message:
        type: string
    required:
      - message
